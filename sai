'''def add(x, y):
    return x + y


def sub(x, y):
    return x - y


choice = 0
print("select choice")
print("1.add")
print("2.sub")
while True:
    choice = input()
    print(choice)

    if choice in ('1', '2'):
        x = int(input("enter value"))
        y = int(input("enter value"))

        if choice == '1':
            print("add of nums" , add(x,y))
        if choice == '2':
            print("sub of nums" ,  sub(x,y))
        break
-----------------GENERATING OTP-----------------------
import random
print(random.randrange(0,100,10))

# import library
import math, random


# function to generate OTP
def generateOTP():
    # Declare a digits variable
    # which stores all digits
    digits = "0123456789"
    OTP = ""

    # length of password can be chaged
    # by changing value in range
    print(digits)
    for i in range(4):
        OTP += digits[math.floor(random.random() * 10)]

    print(digits)
    return OTP
# Driver code
if __name__ == "__main__":
    print("OTP of 4 digits:", generateOTP())

#-----------------------------AMSTRONG NUMBER-----------------------------
lower_number=int(input("enter lower num"))
higher_number=int(input("enter higher number"))
sum =0
temp=i
for i in range(lower_number,higher_number):
    rem=i%10
    sum=sum+(rem*rem*rem)
    i/10
    # print(i)
    #print(sum)
    sum =0
    if(sum==temp):
        print(i)
   # else:
      #  print("no numbers")
#--------------------------------FIBONACCI SERIES--------------------

terms=int(input("how many terms"))
first=int(input("first number"))
second=int(input("second number"))
i=0
while i<terms:
    print(first)
    third =first+second
    first = second
    second =third
    i +=1
#---------------------MULTIPLICATION TABLE--------------------------
n=int(input("enter the number"))
for i in range(1,20):
    result=n*i
    print( n, '*', i, '=' , result)
#--------------------TO PRINT PATTERN-----------------
str=input("Enter the string")
l=len(str)
j=1
for i in range(l+1):
    for j in range(i):
        print(str[j],end=" ")
    print()
#-------------------------PATTERN------------------------
n=int(input("Enter nuber of rows "))
m=[[ 0for i in range(n)]for j in range(n)]
k=1
low=n-1
for i in range(n):
    for j in range(n):
        m[i][j]=k
        k +=1
    for j in range(1,n-1):
        m[n-1][i]=k
        k +=1
    for j in range(1,n):
        m[n-1][j]=k
        k +=1
    for j in range(1,n-1):
        m[j][n-1]

for i in range(n):
    for j in range(n):
        print(m[i][j],end=" ")
    print()

#---------------------------------printing name -------------------
s=input("Enter the string")
l=len(s)
for i in range(l):
    for j in range(i+1):
        print(s[j],end="")
    print(end='\n')
#----------------------------printing word in alphabetical order-----------------
list=[]
for i in s:
    list.append(ord(i))
for i in sorted(list):
    print(chr(i),end="")
#--------------------------converting num to decimal -------------------------
n=int(input("enter the num: "))
r=0
l=[]
l1=[]
while n>0:
    rem=n%2
    l.append(rem)
    n=int(n/2)
#l1.append(n)
#l.extend(l1)
for i in reversed(l):
    print(i,end="")
#---------------------------------To remove ith charecter in string-----------------------
s=input("Enter the string : ")
s2=input("Enter the sring2 : ")
n=int(input("Enter the charecter to be remoed : "))
print(s2[0:n]+s2[4:])
l=[]
for i in s:
    l.append(i)
l.pop(n)
for i in l:
    print(i,end="")
#--------------------sum of squares of first n natural numbers-----------
n=int(input("Enter the number :"))
result=0
for i in range(1,n+1):
    result=result+i*i
print(result)
#-----------------------removing duplicate nums from list of nums-------------
l=[1,1,2,3,4,5,5,6,7,7,8,9,9,0,10,'a','A','sai','Sai']
print(list((set(l))))
#--------------------Print a random 6 digit num which has no 2 consecutive same numbers and no num more than twice-----# -
import random
l=[]
i=1
while len(set(l))<6:
    l.append(random.randint(0,9))
for i in set(l):
    print(i,end="")
#-----------------------------Functions----------
def recur_factorial(n):
   if n == 1:
       return n
   else:
       return n*recur_factorial(n-1)
num = int(input("Enter a number: "))
if num < 0:
   print("Sorry, factorial does not exist for negative numbers")
elif num == 0:
   print("The factorial of 0 is 1")
else:
   print("The factorial of",num,"is",recur_factorial(num))

#----------------------------------Prime number------------------------
n=int(input("n : "))
count=0
for i in range(1,n+1):
    if n%i==0:
        count+=1
    print(count)
if count==2:
    print("prime")
else:
    print("not prime")
#---------------------------------lambda function-------------------------
result=lambda x,y:x+y
print(result(5,6))
def lam(a):
    return lambda a:a*10
b=lam(4)
print(b(5))
#----------------------Reduce function------------------------------------
#reduce=(fun,seq)
import functools as f
l=[1,2,3,4,5,6]
print(f.reduce(lambda a,b:a+b,l))
print(f.reduce(lambda a,b: a if a>b  else b,l))
#------------------Accumulate------------------------------------
#accumulate=(iterable,func)
import itertools as i
l=[1,2,3,4,5,6]
print(list(i.accumulate(l,lambda a,b:a+b)))
#filter=(function , iterable)
l=[1,2,3,4,5,6]
result=(filter(lambda a: a%2==0,l))
print(list(result))
#----------------------------Map function-----------------------
#map=(func,iterables)
def add(a,b):
    return a+b
result=(map(add,[1,2],[2,3]))
print(list(result))
result=map(lambda a,b:a+b,[1,2,3,4],[5,6,7,8])
print(list(result))
#map,lambda,reduce,filter,accumulate,zip
#------------------------------Zip function---------------------
x=zip([1,2],[3,4])
print(list(x))
a = [1, 2, 3, 4]
b = ['5', '6', '7', '8']
x=zip(a,b)
print(dict(x))
new=dict(x).copy()
print(new)
#---------------------Functions---------------
def add(*a):
    result=a+add(a)
print(add(1,2,3,4))
#----------------------------------Denominations--------------------
amount=int(input("Enter the amount to be withdrawn"))
n=0
n=amount//500
print("500=500*",n)
amount=amount-(500*n)
n=amount//100
print("100=100*",n)
amount=amount-(100*n)
n=amount//50
print("50=50*",n)
amount=amount-(50*n)
n=amount//10
print("10=10*",n)
#------------------------------Swapcase--------------------------------

print (''.join([i.lower() if i.isupper() else i.upper() for i in input()]))
s='abc'
print(s.join('2'))
#------------------------------- .format()------------------------------
s='sai'
s1='kumar'
print("Hello {0} {1}".format(s,s1))
#-------------------------pattern----------------------------------

import string
alpha = string.ascii_lowercase
n = int(input())
L = []
for i in range(n):
    s = "-".join(alpha[i:n])
    L.append((s[::-1]+s[1:]).center(4*n-3, "-"))
print('\n'.join(L[:0:-1]+L))'''

saikumar
